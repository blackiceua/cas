<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:c="http://www.springframework.org/schema/c" xmlns:p="http://www.springframework.org/schema/p" xmlns:sec="http://www.springframework.org/schema/security" xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.springframework.org/schema/beans"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

  <bean c:authenticator-ref="authenticator" class="org.jasig.cas.authentication.LdapAuthenticationHandler"
     id="ldapAuthenticationHandler"
     p:principalIdAttribute="sAMAccountName">
    <property name="principalAttributeMap">
      <map>
<!--
                      | This map provides a simple attribute resolution mechanism.
                      | Keys are LDAP attribute names, values are CAS attribute names.
                      | Use this facility instead of a PrincipalResolver if LDAP is
                      | the only attribute source.
                      -->
        <entry key="displayName" value="displayName"/>
        <!-- <entry key="mail" value="mail"/> -->
        <!-- <entry key="sAMAccountName" value="sAMAccountName"/> -->
      </map>
    </property>
    <property name="principalAttributeList">
      <list>
        <value>displayName</value>
        <value>sAMAccountName</value>
        <value>mail</value>
      </list>
    </property>
  </bean>

  <bean
    p:entryResolver-ref="entryResolver"
    c:handler-ref="authHandler"
    c:resolver-ref="dnResolver"
    class="org.ldaptive.auth.Authenticator"
    id="authenticator">
    <property name="authenticationResponseHandlers">
        <list>
            <bean class="org.ldaptive.auth.ext.ActiveDirectoryAuthenticationResponseHandler" />
        </list>
    </property>
  </bean>

  <!-- <bean class="org.ldaptive.auth.PooledSearchDnResolver" id="dnResolver" p:allowMultipleDns="false"
     p:baseDn="${ldap.baseDn}" p:connectionFactory-ref="searchPooledLdapConnectionFactory"
     p:subtreeSearch="true" p:userFilter="${ldap.authn.searchFilter}"/> -->

   <bean id="dnResolver"
           class="org.ldaptive.auth.FormatDnResolver"
           c:format="%s@${ldap.domain}" />


  <bean class="org.ldaptive.pool.PooledConnectionFactory" id="searchPooledLdapConnectionFactory" p:connectionPool-ref="searchConnectionPool"/>

  <bean id="searchConnectionPool" p:connectionFactory-ref="searchConnectionFactory" parent="abstractConnectionPool"/>

  <bean class="org.ldaptive.DefaultConnectionFactory" id="searchConnectionFactory" p:connectionConfig-ref="searchConnectionConfig"/>

  <bean id="searchConnectionConfig" p:connectionInitializer-ref="bindConnectionInitializer" parent="abstractConnectionConfig"/>

  <bean class="org.ldaptive.BindConnectionInitializer" id="bindConnectionInitializer" p:bindDn="${ldap.managerDn}">
    <property name="bindCredential">
      <bean c:password="${ldap.managerPassword}" class="org.ldaptive.Credential"/>
    </property>
  </bean>

  <bean abstract="true" class="org.ldaptive.pool.BlockingConnectionPool" id="abstractConnectionPool" init-method="initialize" p:blockWaitTime="${ldap.pool.blockWaitTime}" p:poolConfig-ref="ldapPoolConfig" p:pruneStrategy-ref="pruneStrategy"
    p:validator-ref="searchValidator"/>

  <bean abstract="true" class="org.ldaptive.ConnectionConfig" id="abstractConnectionConfig" p:connectTimeout="${ldap.connectTimeout}" p:ldapUrl="${ldap.url}" p:sslConfig-ref="sslConfig" p:useStartTLS="${ldap.useStartTLS}"/>

  <bean class="org.ldaptive.pool.PoolConfig" id="ldapPoolConfig" p:maxPoolSize="${ldap.pool.maxSize}" p:minPoolSize="${ldap.pool.minSize}" p:validateOnCheckOut="${ldap.pool.validateOnCheckout}" p:validatePeriod="${ldap.pool.validatePeriod}"
    p:validatePeriodically="${ldap.pool.validatePeriodically}"/>

  <bean class="org.ldaptive.ssl.SslConfig" id="sslConfig">
    <property name="credentialConfig">
      <bean class="org.ldaptive.ssl.X509CredentialConfig" p:trustCertificates="${ldap.trustedCert}"/>
    </property>
  </bean>

  <bean class="org.ldaptive.pool.IdlePruneStrategy" id="pruneStrategy" p:idleTime="${ldap.pool.idleTime}" p:prunePeriod="${ldap.pool.prunePeriod}"/>

  <bean class="org.ldaptive.pool.SearchValidator" id="searchValidator"/>

  <bean class="org.ldaptive.auth.PooledBindAuthenticationHandler" id="authHandler" p:connectionFactory-ref="bindPooledLdapConnectionFactory"/>

  <bean class="org.ldaptive.pool.PooledConnectionFactory" id="bindPooledLdapConnectionFactory" p:connectionPool-ref="bindConnectionPool"/>

  <bean id="bindConnectionPool" p:connectionFactory-ref="bindConnectionFactory" parent="abstractConnectionPool"/>

  <bean class="org.ldaptive.DefaultConnectionFactory" id="bindConnectionFactory" p:connectionConfig-ref="bindConnectionConfig"/>

  <bean id="bindConnectionConfig" parent="abstractConnectionConfig"/>
  <!-- <bean id="entryResolver"
      class="org.ldaptive.auth.SearchEntryResolver"
      p:baseDn="${ldap.baseDn}"
      p:userFilter="userPrincipalName={dn}"
      p:subtreeSearch="true" /> -->
  <bean id="entryResolver"
      class="org.jasig.cas.authentication.support.UpnSearchEntryResolver"
      p:baseDn="${ldap.baseDn}" />
</beans>
